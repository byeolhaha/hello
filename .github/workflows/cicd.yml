name: develop branch Build and Deploy to EC2
on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

env:
  BUCKET_NAME: hellomeritz-cicd
  PROJECT_NAME: hellomeritz
  DEPLOYMENT_GROUP_NAME: meritz
  CODE_DEPLOY_APP_NAME: code-deploy
jobs:
  # 작업의 이름
  build_and_test:
    # GitHub Actions 러너의 운영 체제
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.21
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306:3306

      mongodb:
        image: mongo:latest
        env:
          MONGO_INITDB_DATABASE: test
        ports:
          - 27017:27017

        # options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10

    # 순차적으로 실행될 단계들을 정의하는 섹션
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
      - name: Set up JDK 17
        uses: actions/setup-java@v3.13.0
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          mkdir -p src/test/resources
          
          echo "${{ secrets.APPLICATION_YML_CONTENT }}" > src/main/resources/application.yml
          echo "${{ secrets.APPLICATION_TEST_YML_CONTENT }}" > src/test/resources/application.yml
          echo "${{ secrets.GCP_BUCKET_CONTENT }}" > src/main/resources/meritz-420004-93e56cbdf236.json

      - name: Build with gradle
        run: ./gradlew build

      - name: Openapi3 Documentation
        run: ./gradlew openapi3

      - name: Make Zip File
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy To EC2 instance
        run: aws deploy create-deployment
          --application-name $CODE_DEPLOY_APP_NAME
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name $DEPLOYMENT_GROUP_NAME
          --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip